#include "include/parts.h"

//Parts definition:
    //First how many different parts = 7 , Rotation = 4 , Horizontal and vertiacal blocks = 5
char mParts[8][4][5][5]=
{
  {   //Square:
    {
        {0,0,0,0,0},
        {0,0,0,0,0},
        {0,0,2,1,0},
        {0,0,1,1,0},
        {0,0,0,0,0}
    },
    {
        {0,0,0,0,0},
        {0,0,0,0,0},
        {0,0,2,1,0},
        {0,0,1,1,0},
        {0,0,0,0,0}
    },
    {
        {0,0,0,0,0},
        {0,0,0,0,0},
        {0,0,2,1,0},
        {0,0,1,1,0},
        {0,0,0,0,0}
    },
    {
        {0,0,0,0,0},
        {0,0,0,0,0},
        {0,0,2,1,0},
        {0,0,1,1,0},
        {0,0,0,0,0}
    }
  },    
//Now I:
  {   
    {
        {0,0,0,0,0},
        {0,0,0,0,0},
        {0,1,2,1,1},
        {0,0,0,0,0},
        {0,0,0,0,0}
    },
    {
        {0,0,0,0,0},
        {0,0,1,0,0},
        {0,0,2,0,0},
        {0,0,1,0,0},
        {0,0,1,0,0}
    },
    {
        {0,0,0,0,0},
        {0,0,0,0,0},
        {1,1,2,1,0},
        {0,0,0,0,0},
        {0,0,0,0,0}
    },
    {
        {0,0,1,0,0},
        {0,0,1,0,0},
        {0,0,2,0,0},
        {0,0,1,0,0},
        {0,0,0,0,0}
    }
 },

  //L
 {   
    {
        {0,0,0,0,0},
        {0,0,1,0,0},
        {0,0,2,0,0},
        {0,0,1,1,0},
        {0,0,0,0,0}
    },
    {
        {0,0,0,0,0},
        {0,0,0,0,0},
        {0,1,2,1,0},
        {0,1,0,0,0},
        {0,0,0,0,0}
    },
    {
        {0,0,0,0,0},
        {0,1,1,0,0},
        {0,0,2,0,0},
        {0,0,1,0,0},
        {0,0,0,0,0}
    },
    {
        {0,0,0,0,0},
        {0,0,0,1,0},
        {0,1,2,1,0},
        {0,0,0,0,0},
        {0,0,0,0,0}
    }
 },

  //L mirrored
 {   
    {
        {0,0,0,0,0},
        {0,0,1,0,0},
        {0,0,2,0,0},
        {0,1,1,0,0},
        {0,0,0,0,0}
    },
    {
        {0,0,0,0,0},
        {0,1,0,0,0},
        {0,1,2,1,0},
        {0,0,0,0,0},
        {0,0,0,0,0}
    },
    {
        {0,0,0,0,0},
        {0,0,1,1,0},
        {0,0,2,0,0},
        {0,0,1,0,0},
        {0,0,0,0,0}
    },
    {
        {0,0,0,0,0},
        {0,0,0,0,0},
        {0,1,2,1,0},
        {0,0,0,1,0},
        {0,0,0,0,0}
    }
 },

  //N
 {   
    {
        {0,0,0,0,0},
        {0,0,0,1,0},
        {0,0,2,1,0},
        {0,0,1,0,0},
        {0,0,0,0,0}
    },
    {
        {0,0,0,0,0},
        {0,0,0,0,0},
        {0,1,2,0,0},
        {0,0,1,1,0},
        {0,0,0,0,0}
    },
    {
        {0,0,0,0,0},
        {0,0,1,0,0},
        {0,1,2,0,0},
        {0,1,0,0,0},
        {0,0,0,0,0}
    },
    {
        {0,0,0,0,0},
        {0,1,1,0,0},
        {0,0,2,1,0},
        {0,0,0,0,0},
        {0,0,0,0,0}
    }
 },

  //N Mirrored
 {   
    {
        {0,0,0,0,0},
        {0,0,1,0,0},
        {0,0,2,1,0},
        {0,0,0,1,0},
        {0,0,0,0,0}
    },
    {
        {0,0,0,0,0},
        {0,0,0,0,0},
        {0,0,2,1,0},
        {0,1,1,0,0},
        {0,0,0,0,0}
    },
    {
        {0,0,0,0,0},
        {0,1,0,0,0},
        {0,1,2,0,0},
        {0,0,1,0,0},
        {0,0,0,0,0}
    },
    {
        {0,0,0,0,0},
        {0,0,1,1,0},
        {0,1,2,0,0},
        {0,0,0,0,0},
        {0,0,0,0,0}
    }
 },

  // T
 {   
    {
        {0,0,0,0,0},
        {0,0,1,0,0},
        {0,0,2,1,0},
        {0,0,1,0,0},
        {0,0,0,0,0}
    },
    {
        {0,0,0,0,0},
        {0,0,0,0,0},
        {0,1,2,1,0},
        {0,0,1,0,0},
        {0,0,0,0,0}
    },
    {
        {0,0,0,0,0},
        {0,0,1,0,0},
        {0,1,2,0,0},
        {0,0,1,0,0},
        {0,0,0,0,0}
    },
    {
        {0,0,0,0,0},
        {0,0,1,0,0},
        {0,1,2,1,0},
        {0,0,0,0,0},
        {0,0,0,0,0}
    }
 },
 {
     {
        {0,0,0,0,0},
        {0,0,1,0,0},
        {0,0,2,1,0},
        {0,0,0,0,0},
        {0,0,0,0,0}
     },
    {
        {0,0,0,0,0},
        {0,0,0,0,0},
        {0,0,2,1,0},
        {0,0,1,0,0},
        {0,0,0,0,0}
     },
    {
        {0,0,0,0,0},
        {0,0,0,0,0},
        {0,1,2,0,0},
        {0,0,1,0,0},
        {0,0,0,0,0}
     },
    {
        {0,0,0,0,0},
        {0,0,1,0,0},
        {0,1,2,0,0},
        {0,0,0,0,0},
        {0,0,0,0,0}
     }
    },



};


int mPartsInitialPosition[8][4][2]=
{

//Square
    {
        {-2,-3},
        {-2,-3},
        {-2,-3},
        {-2,-3}
    },

    //I
    {
        {-2,-2},
        {-2,-3},
        {-2,-2},
        {-2,-3}
    },
    //L
    {
        {-2,-3},
        {-2,-3},
        {-2,-3},
        {-2,-2}
    },
    //L Mirrored
    {
        {-2,-3},
        {-2,-2},
        {-2,-3},
        {-2,-3}
    },
    //N
    {
        {-2,-3},
        {-2,-3},
        {-2,-3},
        {-2,-2}
    },
    //N Mirrored
    {
        {-2,-3},
        {-2,-3},
        {-2,-3},
        {-2,-2}
    },
    //T
    {
        {-2,-3},
        {-2,-3},
        {-2,-3},
        {-2,-2}
    },
    {
         {-2,-3},
         {-2,-3},
         {-2,-3},
         {-2,-2}
    },

};

//Return the type of Block(0= no block,1 = normal block, 2=pivot block)

int Parts::GetBlockType(int pPart, int pRotation, int pX, int pY)
{
    return mParts[pPart][pRotation][pX][pY];

}

int Parts::GetX_InitialPosition(int pPart,int pRotation)
{
    return mPartsInitialPosition[pPart][pRotation][0];

}

int Parts::GetY_InitialPosition(int pPart,int pRotation)
{
    return mPartsInitialPosition[pPart][pRotation][0];

}